1.js变量的作用域
   全局变量和局部变量;
   js的函数内部可以直接读取全局变量，但是函数外部无法读取函数内部的变量。但是函数内部的变量
  声明的时候，如果不用var,则是全局变量，函数外部还是可以访问。
  
2.如何从外部读取局部变量
   function f1(){
　　　　var n=999;
　　　　function f2(){
　　　　　　alert(n); // 999
　　　　}
　　}
　　f1中包含f2,此时,f1的变量，对于f2都是可以访问的，但是f2中的变量f1无法访问。这是js的链式作用域结构，
　子对象会一级级向上寻找所有父对象的变量。父对象的所有变量，对于子对象都是可以访问的，但是反过来不行。
　  现在我们在f1的外部无法访问f1内部的局部变量，但是如果把f2作为f1的返回值，我们是不是可在f1的外部访问内部的变量了？
　不用疑惑，我们马上试试！
　  function f1(){
　    var n=999;
　    function f2(){
　      alert(n);
　    }
　    return f2;
　  }
　  var result = f1();
　  result();///999
　  这里的f2函数，就是闭包。闭包是能够读取其他函数内部变量的函数！是定义在函数内部的函数。
　 本质上，闭包是将函数内部和函数外部连接起来的一座桥梁。
　 
3.闭包的作用
  1).连接函数内部和函数外部，访问函数内部的变量;
  2).让变量的值始终保存在内存中;
  
